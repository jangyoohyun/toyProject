package com.study.toyproject.handler;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.ControllerAdvice;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.bind.annotation.RestController;

import com.study.toyproject.handler.ex.CustomApiException;
import com.study.toyproject.handler.ex.CustomException;
import com.study.toyproject.handler.ex.CustomVaildationApiException;
import com.study.toyproject.util.Script;
import com.study.toyproject.web.dto.CMRespDto;

@RestController
@ControllerAdvice
public class ControllerExceptionHandler {
	
	@ExceptionHandler(CustomVaildationException.class)
	public String validationException(CustomVaildationException e) {
		// CMRespDto, Script 비교
		// 클라이언트에게 응답할 때는 Script 좋음.
		// Ajax통신 - CMRespDto
		// Android통신 - CMRespDto
		if(e.getErrorMap() == null) {
			return Script.back(e.getMessage());
		} else {
			return Script.back(e.getErrorMap().toString());
		}
	}
	
	@ExceptionHandler(CustomException.class)
	public String exception(CustomException e) {
		return Script.back(e.getMessage());	
	}
	
	@ExceptionHandler(CustomVaildationApiException.class)
	public ResponseEntity<?> validationException(CustomVaildationApiException e) {
		return new ResponseEntity<>(new CMRespDto<>(-1, e.getMessage(), e.getErrorMap()), 
				HttpStatus.BAD_REQUEST);
	}
	
	@ExceptionHandler(CustomApiException.class)
	public ResponseEntity<?> apiException(CustomApiException e) {
		return new ResponseEntity<>(new CMRespDto<>(-1, e.getMessage(), null), 
				HttpStatus.BAD_REQUEST);
	}

}
