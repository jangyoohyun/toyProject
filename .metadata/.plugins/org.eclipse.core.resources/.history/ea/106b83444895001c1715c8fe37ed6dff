package com.study.toyproject.service;

import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.study.toyproject.domain.user.User;
import com.study.toyproject.domain.user.UserRepository;
import com.study.toyproject.web.dto.UserUpdateDto;

import lombok.RequiredArgsConstructor;

@RequiredArgsConstructor
@Service
public class AuthService {
	
	private final BCryptPasswordEncoder bCryptPasswordEncoder;
	private final UserRepository userRepository;
	
	@Transactional
	public User 회원가입(User user) {
		
		String rawPassword = user.getPassword();
		String encPassword = bCryptPasswordEncoder.encode(rawPassword);
		user.setPassword(encPassword);
		user.setRole("ROLE_USER");
		
		User userEntity = userRepository.save(user);
		
		return userEntity;
		
	}

	@Transactional
	public void userUpdate(int userId, UserUpdateDto userUpdateDto) {
	
		userRepository.findById(userId).orElseThrow(() -> {return new IllegalArgumentException("회원 ID를 찾을 수 없습니다.");});
		
		userUpdateDto.setName(userUpdateDto.getName());
		userUpdateDto.setPhone(userUpdateDto.getPhone());
	
		
	}

}
