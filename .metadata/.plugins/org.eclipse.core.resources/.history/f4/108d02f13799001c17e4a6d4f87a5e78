package com.study.toyproject.service;

import java.util.Optional;

import org.springframework.mail.SimpleMailMessage;
import org.springframework.stereotype.Service;
import org.springframework.util.Assert;

import com.study.toyproject.domain.ConfirmationToken.ConfirmationToken;
import com.study.toyproject.domain.ConfirmationToken.ConfirmationTokenRepository;

import lombok.RequiredArgsConstructor;

@Service
@RequiredArgsConstructor
public class ConfirmationTokenService {
	
	private final ConfirmationTokenRepository confirmationTokenRepository;
	private final EmailSenderService emailSenderService;
	
	public String createEmailConfirmationToken(String userId, String receiverEmail) {
		Assert.hasText(userId, "userId는 필수입니다.");
		Assert.hasText(receiverEmail, "receiverEmail은 필수입니다.");
		
		ConfirmationToken emailConfirmationToken = ConfirmationToken.createEmailConfirmationToken(userId);
		confirmationTokenRepository.save(emailConfirmationToken);
		
		SimpleMailMessage mailMessage = new SimpleMailMessage();
		mailMessage.setTo(receiverEmail);
		mailMessage.setSubject("회원가입 이메일 인증");
		mailMessage.setText("http://localhost:8080/confirm-email?token="+emailConfirmationToken.getId());
		
		return emailConfirmationToken.getId();
	};
	
	public ConfirmationToken findByAndExpirationDateAfterAndExpired(String confirmationTokenId) {
		Optional<ConfirmationToken> confirmationToken = confirmationTokenRepository.findByAndExpirationDateAfterAndExpired(confirmationTokenId, false);
		return confirmationToken.orElseThrow(() -> new BadRequestException(ValidationConstant.TOKEN_NOT_FOUND));
	};

}
